create
database feedback;

create schema review;

create table review.review
(
    id           INTEGER PRIMARY KEY,
    description  varchar(1000) not null,
    grade        INTEGER       not null,
    userId       INTEGER       not null,
    courseId     INTEGER       not null,
    isUpdated    boolean       not null default false,
    creationDate DATE      not null default CURRENT_TIMESTAMP,
    updateDate   DATE,
    isBanned     boolean                default false
);

comment
on column review.review.id is 'Идентификатор отзыва';
comment
on column review.review.description is 'Текст отзыва';
comment
on column review.review.grade is 'Оценка';
comment
on column review.review.userId is 'Логин комментатора';
comment
on column review.review.isUpdated is 'Отображать логин комментатора в публикации';
comment
on column review.review.courseId is 'Идентификатор курса, к которому добавлен коммент';
comment
on column review.review.creationDate is 'Дата создания';
comment
on column review.review.updateDate is 'Дата обновления';
comment
on column review.review.isBanned is 'Заблокирован ли комментарий пользователя';

create table ReviewMark
(
    id           INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    mark         INTEGER  NOT NULL, -- -1 dislike 1 like
    userId       INTEGER  NOT NULL,
    reviewId     INTEGER  NOT NULL,
    creationDate DATETIME not null default CURRENT_TIMESTAMP
);

create table ReviewBan
(
    id           INTEGER PRIMARY KEY AUTOINCREMENT,
    adminId      INTEGER       NOT NULL,
    reviewId     INTEGER       NOT NULL,
    description  varchar(1000) not null,
    creationDate DATETIME      not null default CURRENT_TIMESTAMP
);

-- права на таблицы

CREATE
USER review_admin WITH PASSWORD 'admin';
GRANT CONNECT
ON DATABASE review TO review_admin;
GRANT USAGE ON SCHEMA
review TO review_admin;
GRANT SELECT, INSERT, UPDATE, DELETE ON review.review TO review_admin;
GRANT SELECT ON review.notification_read_status TO review_admin;
GRANT INSERT, UPDATE, DELETE ON review.review_notification TO review_admin;

-- Проверка прав
SELECT pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'SELECT')     AS "SELECT",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'INSERT')     AS "INSERT",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'UPDATE')     AS "UPDATE",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'DELETE')     AS "DELETE",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'TRUNCATE')   AS "TRUNCATE",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'REFERENCES') AS "REFERENCES",
       pg_catalog.has_table_privilege(
               'review_admin', 'review.review', 'TRIGGER')    AS "TRIGGER";